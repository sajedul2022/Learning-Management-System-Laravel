                ========== Class 01 ===========

1. intall breeze and DB config
2. https://spatie.be/docs/laravel-permission/v5/installation-laravel  //  User Permission set update
3. https://php-flasher.io/laravel                                      // Laravel Flasher setup
4. make model with -mc
    php artisan make:model Lead -mc
    php artisan make:model Course -mc
    php artisan make:model Curriculum -mc
    php artisan make:model Exam -mc
    php artisan make:model Invoice -mc
    php artisan make:model InvoiceItem -mc
    php artisan make:model Attendance -mc
    php artisan make:model Homework -mc
    php artisan make:model Note -mc

5. Database design and migration
    https://app.dbdesigner.net/designer/schema/0-untitled-4b657596-1965-4812-bf18-17bfc38f6388


    ** create each table schema table and field
    ** relation table with others table: curricula table AND  courses table
        $table->foreign('course_id')->references('id')->on('courses')->onDelete('cascade');

                                ========== Class -02 ========

1. model File configaration
    like relation table with others table  :

        public function curriculums(){
            return $this->hasMany(Curriculum::class);
        }


*** create role ***
https://spatie.be/docs/laravel-permission/v5/basic-usage/basic-usage

2. User.php model

use Spatie\Permission\Traits\HasRoles;
    class User extends Authenticatable
    {
        use HasApiTokens, HasFactory, Notifiable , HasRoles;

        //..
    }

7. Database Seeder

    use Spatie\Permission\Models\Role;
    use Spatie\Permission\Models\Permission;

    public function run(){

        $user = new User();
        $user->name = 'Super Admin';
        $user->email = 'super@admin.com';
        $user->password = bcrypt('super@admin.com');
        $user->save();

        $role = Role::create([
            'name'=> 'Super Admin'
        ]);

        $permission = Permission::create([
            'name'=> 'create-admin'
        ]);

        $role->givePermissionTo($permission);
        $permission->assignRole($role);

        $user->assignRole($role);

        //..
    }

    than cli: php artisan migrate:fresh --seed


                            ========== Class -03 ========

1. set up liveeware https://laravel-livewire.com/docs/2.x/quickstart

    composer require livewire/livewire
    and include css and script see documentation

2. flassher implements  https://php-flasher.io/laravel

        use Flasher\Prime\FlasherInterface;

        public function increase(FlasherInterface $flasher, $msg){

                $flasher->addSuccess('Succesfully Increase!'. $msg);
                //..
        }

